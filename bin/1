==6892== Memcheck, a memory error detector
==6892== Memcheck, a memory error detector
==6892== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==6892== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==6892== Command: ./main c++filt
==6892== 
==6892== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==6892== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==6892== Command: ./main c++filt
==6892== 
==6892== Thread 2:
==6892== Use of uninitialised value of size 8
==6892== Thread 2:
==6892== Use of uninitialised value of size 8
==6892==    at 0x401437: sleepAndWork() (tasksystem.cc:19)
==6892==    by 0x4042F2: _ZNSt12_Bind_simpleIFPFvvEvEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE (functional:1598)
==6892==    at 0x401437: sleepAndWork() (tasksystem.cc:19)
==6892==    by 0x4042F2: _ZNSt12_Bind_simpleIFPFvvEvEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE (functional:1598)
==6892==    by 0x404242: std::_Bind_simple<void (*()())()>::operator()() (functional:1586)
==6892==    by 0x404242: std::_Bind_simple<void (*()())()>::operator()() (functional:1586)
==6892==    by 0x404153: std::thread::_Impl<std::_Bind_simple<void (*()())()> >::_M_run() (thread:115)
==6892==    by 0x5101E0F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==6892==    by 0x404153: std::thread::_Impl<std::_Bind_simple<void (*()())()> >::_M_run() (thread:115)
==6892==    by 0x5101E0F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==6892==    by 0x4E39E99: start_thread (pthread_create.c:308)
==6892==    by 0x4E39E99: start_thread (pthread_create.c:308)
==6892==    by 0x565B4BC: clone (clone.S:112)
==6892== 
==6892==    by 0x565B4BC: clone (clone.S:112)
==6892== 
==6892== Jump to the invalid address stated on the next line
==6892==    at 0x0: ???
==6892== Jump to the invalid address stated on the next line
==6892==    at 0x0: ???
==6892==    by 0x4042F2: _ZNSt12_Bind_simpleIFPFvvEvEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE (functional:1598)
==6892==    by 0x4042F2: _ZNSt12_Bind_simpleIFPFvvEvEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE (functional:1598)
==6892==    by 0x404242: std::_Bind_simple<void (*()())()>::operator()() (functional:1586)
==6892==    by 0x404153: std::thread::_Impl<std::_Bind_simple<void (*()())()> >::_M_run() (thread:115)
==6892==    by 0x5101E0F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==6892==    by 0x404242: std::_Bind_simple<void (*()())()>::operator()() (functional:1586)
==6892==    by 0x404153: std::thread::_Impl<std::_Bind_simple<void (*()())()> >::_M_run() (thread:115)
==6892==    by 0x5101E0F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==6892==    by 0x4E39E99: start_thread (pthread_create.c:308)
==6892==    by 0x565B4BC: clone (clone.S:112)
==6892==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==6892==    by 0x4E39E99: start_thread (pthread_create.c:308)
==6892==    by 0x565B4BC: clone (clone.S:112)
==6892==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==6892== 
==6892== 
==6892== Process terminating with default action of signal 11 (SIGSEGV)
==6892==  Bad permissions for mapped region at address 0x0
==6892== 
==6892== 
==6892== Process terminating with default action of signal 11 (SIGSEGV)
==6892==  Bad permissions for mapped region at address 0x0
==6892==    at 0x0: ???
==6892==    by 0x4042F2: _ZNSt12_Bind_simpleIFPFvvEvEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE (functional:1598)
==6892==    at 0x0: ???
==6892==    by 0x4042F2: _ZNSt12_Bind_simpleIFPFvvEvEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE (functional:1598)
==6892==    by 0x404242: std::_Bind_simple<void (*()())()>::operator()() (functional:1586)
==6892==    by 0x404153: std::thread::_Impl<std::_Bind_simple<void (*()())()> >::_M_run() (thread:115)
==6892==    by 0x404242: std::_Bind_simple<void (*()())()>::operator()() (functional:1586)
==6892==    by 0x404153: std::thread::_Impl<std::_Bind_simple<void (*()())()> >::_M_run() (thread:115)
==6892==    by 0x5101E0F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==6892==    by 0x4E39E99: start_thread (pthread_create.c:308)
==6892==    by 0x565B4BC: clone (clone.S:112)
==6892==    by 0x5101E0F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==6892==    by 0x4E39E99: start_thread (pthread_create.c:308)
==6892==    by 0x565B4BC: clone (clone.S:112)
==6892== 
==6892== HEAP SUMMARY:
==6892==     in use at exit: 1,128 bytes in 9 blocks
==6892==   total heap usage: 10 allocs, 1 frees, 1,136 bytes allocated
==6892== 
==6892== 
==6892== HEAP SUMMARY:
==6892==     in use at exit: 1,128 bytes in 9 blocks
==6892==   total heap usage: 10 allocs, 1 frees, 1,136 bytes allocated
==6892== 
==6892== LEAK SUMMARY:
==6892==    definitely lost: 0 bytes in 0 blocks
==6892==    indirectly lost: 0 bytes in 0 blocks
==6892==      possibly lost: 920 bytes in 4 blocks
==6892==    still reachable: 208 bytes in 5 blocks
==6892==         suppressed: 0 bytes in 0 blocks
==6892== Rerun with --leak-check=full to see details of leaked memory
==6892== 
==6892== For counts of detected and suppressed errors, rerun with: -v
==6892== Use --track-origins=yes to see where uninitialised values come from
==6892== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)
==6892== LEAK SUMMARY:
==6892==    definitely lost: 0 bytes in 0 blocks
==6892==    indirectly lost: 0 bytes in 0 blocks
==6892==      possibly lost: 920 bytes in 4 blocks
==6892==    still reachable: 208 bytes in 5 blocks
==6892==         suppressed: 0 bytes in 0 blocks
==6892== Rerun with --leak-check=full to see details of leaked memory
==6892== 
==6892== For counts of detected and suppressed errors, rerun with: -v
==6892== Use --track-origins=yes to see where uninitialised values come from
==6892== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)
